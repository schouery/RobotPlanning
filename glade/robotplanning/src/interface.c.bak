/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)

GtkWidget*
create_mainwindow (void)
{
  GtkWidget *mainwindow;
  GtkWidget *vbox1;
  GtkWidget *menubar1;
  GtkWidget *menuitem4;
  GtkWidget *menuitem4_menu;
  GtkWidget *menu_new;
  GtkWidget *menu_open;
  GtkWidget *menu_save;
  GtkWidget *menu_save_as;
  GtkWidget *separatormenuitem1;
  GtkWidget *menu_close;
  GtkWidget *menuitem6;
  GtkWidget *menuitem6_menu;
  GtkWidget *show_trapezoids;
  GtkWidget *show_graph;
  GtkWidget *separador1;
  GtkWidget *colors;
  GtkWidget *colors_menu;
  GtkWidget *colors_graph;
  GtkWidget *color_trapezoids;
  GtkWidget *color_segments;
  GtkWidget *color_robot;
  GtkWidget *menuitem7;
  GtkWidget *menuitem7_menu;
  GtkWidget *sobre;
  GtkWidget *toolbar1;
  GtkIconSize tmp_toolbar_icon_size;
  GtkWidget *toolbar_new;
  GtkWidget *toolbar_open;
  GtkWidget *toolbar_save;
  GtkWidget *tmp_image;
  GtkWidget *toolbar_record_poits;
  GtkWidget *toolbar_move;
  GtkWidget *vbox2;
  GtkWidget *drawingarea;
  GtkWidget *hseparator1;
  GtkWidget *hbox1;
  GtkWidget *label1;
  GtkWidget *speedscale;
  GtkWidget *stepbystep;
  GtkWidget *hseparator2;
  GtkWidget *hbox2;
  GtkWidget *label2;
  GtkObject *xinput_adj;
  GtkWidget *xinput;
  GtkWidget *label3;
  GtkObject *yinput_adj;
  GtkWidget *yinput;
  GtkWidget *add_point;
  GtkWidget *vseparator1;
  GtkWidget *togglebutton1;
  GtkWidget *alignment1;
  GtkWidget *hbox3;
  GtkWidget *image1;
  GtkWidget *label4;
  GtkWidget *vseparator2;
  GtkWidget *next_step;
  GtkWidget *alignment2;
  GtkWidget *hbox4;
  GtkWidget *image2;
  GtkWidget *label5;
  GtkWidget *statusbar;
  GtkAccelGroup *accel_group;
  GtkTooltips *tooltips;

  tooltips = gtk_tooltips_new ();

  accel_group = gtk_accel_group_new ();

  mainwindow = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (mainwindow, 800, 600);
  gtk_window_set_title (GTK_WINDOW (mainwindow), _("RobotPlanning"));
  gtk_window_set_resizable (GTK_WINDOW (mainwindow), FALSE);

  vbox1 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox1);
  gtk_container_add (GTK_CONTAINER (mainwindow), vbox1);

  menubar1 = gtk_menu_bar_new ();
  gtk_widget_show (menubar1);
  gtk_box_pack_start (GTK_BOX (vbox1), menubar1, FALSE, FALSE, 0);

  menuitem4 = gtk_menu_item_new_with_mnemonic (_("_Arquivo"));
  gtk_widget_show (menuitem4);
  gtk_container_add (GTK_CONTAINER (menubar1), menuitem4);

  menuitem4_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem4), menuitem4_menu);

  menu_new = gtk_image_menu_item_new_from_stock ("gtk-new", accel_group);
  gtk_widget_show (menu_new);
  gtk_container_add (GTK_CONTAINER (menuitem4_menu), menu_new);

  menu_open = gtk_image_menu_item_new_from_stock ("gtk-open", accel_group);
  gtk_widget_show (menu_open);
  gtk_container_add (GTK_CONTAINER (menuitem4_menu), menu_open);

  menu_save = gtk_image_menu_item_new_from_stock ("gtk-save", accel_group);
  gtk_widget_show (menu_save);
  gtk_container_add (GTK_CONTAINER (menuitem4_menu), menu_save);

  menu_save_as = gtk_image_menu_item_new_from_stock ("gtk-save-as", accel_group);
  gtk_widget_show (menu_save_as);
  gtk_container_add (GTK_CONTAINER (menuitem4_menu), menu_save_as);

  separatormenuitem1 = gtk_separator_menu_item_new ();
  gtk_widget_show (separatormenuitem1);
  gtk_container_add (GTK_CONTAINER (menuitem4_menu), separatormenuitem1);
  gtk_widget_set_sensitive (separatormenuitem1, FALSE);

  menu_close = gtk_image_menu_item_new_from_stock ("gtk-quit", accel_group);
  gtk_widget_show (menu_close);
  gtk_container_add (GTK_CONTAINER (menuitem4_menu), menu_close);

  menuitem6 = gtk_menu_item_new_with_mnemonic (_("E_xibir"));
  gtk_widget_show (menuitem6);
  gtk_container_add (GTK_CONTAINER (menubar1), menuitem6);

  menuitem6_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem6), menuitem6_menu);

  show_trapezoids = gtk_check_menu_item_new_with_mnemonic (_("Trapezoides"));
  gtk_widget_show (show_trapezoids);
  gtk_container_add (GTK_CONTAINER (menuitem6_menu), show_trapezoids);
  gtk_check_menu_item_set_active (GTK_CHECK_MENU_ITEM (show_trapezoids), TRUE);

  show_graph = gtk_check_menu_item_new_with_mnemonic (_("Grafo"));
  gtk_widget_show (show_graph);
  gtk_container_add (GTK_CONTAINER (menuitem6_menu), show_graph);
  gtk_check_menu_item_set_active (GTK_CHECK_MENU_ITEM (show_graph), TRUE);

  separador1 = gtk_separator_menu_item_new ();
  gtk_widget_show (separador1);
  gtk_container_add (GTK_CONTAINER (menuitem6_menu), separador1);
  gtk_widget_set_sensitive (separador1, FALSE);

  colors = gtk_menu_item_new_with_mnemonic (_("Cores"));
  gtk_widget_show (colors);
  gtk_container_add (GTK_CONTAINER (menuitem6_menu), colors);

  colors_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (colors), colors_menu);

  colors_graph = gtk_menu_item_new_with_mnemonic (_("Grafo"));
  gtk_widget_show (colors_graph);
  gtk_container_add (GTK_CONTAINER (colors_menu), colors_graph);

  color_trapezoids = gtk_menu_item_new_with_mnemonic (_("Trapezoides"));
  gtk_widget_show (color_trapezoids);
  gtk_container_add (GTK_CONTAINER (colors_menu), color_trapezoids);

  color_segments = gtk_menu_item_new_with_mnemonic (_("Segmentos"));
  gtk_widget_show (color_segments);
  gtk_container_add (GTK_CONTAINER (colors_menu), color_segments);

  color_robot = gtk_menu_item_new_with_mnemonic (_("Rob\303\264"));
  gtk_widget_show (color_robot);
  gtk_container_add (GTK_CONTAINER (colors_menu), color_robot);

  menuitem7 = gtk_menu_item_new_with_mnemonic (_("Aj_uda"));
  gtk_widget_show (menuitem7);
  gtk_container_add (GTK_CONTAINER (menubar1), menuitem7);

  menuitem7_menu = gtk_menu_new ();
  gtk_menu_item_set_submenu (GTK_MENU_ITEM (menuitem7), menuitem7_menu);

  sobre = gtk_menu_item_new_with_mnemonic (_("_Sobre"));
  gtk_widget_show (sobre);
  gtk_container_add (GTK_CONTAINER (menuitem7_menu), sobre);

  toolbar1 = gtk_toolbar_new ();
  gtk_widget_show (toolbar1);
  gtk_box_pack_start (GTK_BOX (vbox1), toolbar1, FALSE, FALSE, 0);
  gtk_toolbar_set_style (GTK_TOOLBAR (toolbar1), GTK_TOOLBAR_ICONS);
  tmp_toolbar_icon_size = gtk_toolbar_get_icon_size (GTK_TOOLBAR (toolbar1));

  toolbar_new = (GtkWidget*) gtk_tool_button_new_from_stock ("gtk-new");
  gtk_widget_show (toolbar_new);
  gtk_container_add (GTK_CONTAINER (toolbar1), toolbar_new);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (toolbar_new), tooltips, _("Novo"), NULL);

  toolbar_open = (GtkWidget*) gtk_tool_button_new_from_stock ("gtk-open");
  gtk_widget_show (toolbar_open);
  gtk_container_add (GTK_CONTAINER (toolbar1), toolbar_open);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (toolbar_open), tooltips, _("Abrir"), NULL);

  toolbar_save = (GtkWidget*) gtk_tool_button_new_from_stock ("gtk-save");
  gtk_widget_show (toolbar_save);
  gtk_container_add (GTK_CONTAINER (toolbar1), toolbar_save);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (toolbar_save), tooltips, _("Salvar"), NULL);

  toolbar_record_poits = (GtkWidget*) gtk_toggle_tool_button_new ();
  gtk_tool_button_set_label (GTK_TOOL_BUTTON (toolbar_record_poits), _("Adicionar Pontos"));
  tmp_image = gtk_image_new_from_stock ("gtk-media-record", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  gtk_tool_button_set_icon_widget (GTK_TOOL_BUTTON (toolbar_record_poits), tmp_image);
  gtk_widget_show (toolbar_record_poits);
  gtk_container_add (GTK_CONTAINER (toolbar1), toolbar_record_poits);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (toolbar_record_poits), tooltips, _("Adicionar Pontos"), NULL);

  tmp_image = gtk_image_new_from_stock ("gtk-jump-to", tmp_toolbar_icon_size);
  gtk_widget_show (tmp_image);
  toolbar_move = (GtkWidget*) gtk_tool_button_new (tmp_image, _("Mover Rob\303\264"));
  gtk_widget_show (toolbar_move);
  gtk_container_add (GTK_CONTAINER (toolbar1), toolbar_move);
  gtk_tool_item_set_tooltip (GTK_TOOL_ITEM (toolbar_move), tooltips, _("Mover Rob\303\264"), NULL);

  vbox2 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox2);
  gtk_box_pack_start (GTK_BOX (vbox1), vbox2, TRUE, TRUE, 0);

  drawingarea = gtk_drawing_area_new ();
  gtk_widget_show (drawingarea);
  gtk_box_pack_start (GTK_BOX (vbox2), drawingarea, TRUE, TRUE, 0);

  hseparator1 = gtk_hseparator_new ();
  gtk_widget_show (hseparator1);
  gtk_box_pack_start (GTK_BOX (vbox2), hseparator1, FALSE, TRUE, 0);

  hbox1 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox1);
  gtk_box_pack_start (GTK_BOX (vbox2), hbox1, FALSE, FALSE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (hbox1), 5);

  label1 = gtk_label_new (_("Velocidade: "));
  gtk_widget_show (label1);
  gtk_box_pack_start (GTK_BOX (hbox1), label1, FALSE, FALSE, 0);

  speedscale = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 100, 1, 0, 0)));
  gtk_widget_show (speedscale);
  gtk_box_pack_start (GTK_BOX (hbox1), speedscale, TRUE, TRUE, 0);
  gtk_scale_set_draw_value (GTK_SCALE (speedscale), FALSE);

  stepbystep = gtk_check_button_new_with_mnemonic (_("Passo a Passo"));
  gtk_widget_show (stepbystep);
  gtk_box_pack_start (GTK_BOX (hbox1), stepbystep, FALSE, FALSE, 0);

  hseparator2 = gtk_hseparator_new ();
  gtk_widget_show (hseparator2);
  gtk_box_pack_start (GTK_BOX (vbox2), hseparator2, FALSE, TRUE, 0);

  hbox2 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox2);
  gtk_box_pack_start (GTK_BOX (vbox2), hbox2, FALSE, TRUE, 0);
  gtk_container_set_border_width (GTK_CONTAINER (hbox2), 5);

  label2 = gtk_label_new (_("X: "));
  gtk_widget_show (label2);
  gtk_box_pack_start (GTK_BOX (hbox2), label2, FALSE, FALSE, 5);

  xinput_adj = gtk_adjustment_new (100, 0, 100, 1, 10, 10);
  xinput = gtk_spin_button_new (GTK_ADJUSTMENT (xinput_adj), 1, 0);
  gtk_widget_show (xinput);
  gtk_box_pack_start (GTK_BOX (hbox2), xinput, FALSE, TRUE, 0);
  gtk_spin_button_set_numeric (GTK_SPIN_BUTTON (xinput), TRUE);

  label3 = gtk_label_new (_("Y: "));
  gtk_widget_show (label3);
  gtk_box_pack_start (GTK_BOX (hbox2), label3, FALSE, FALSE, 5);

  yinput_adj = gtk_adjustment_new (100, 0, 100, 1, 10, 10);
  yinput = gtk_spin_button_new (GTK_ADJUSTMENT (yinput_adj), 1, 0);
  gtk_widget_show (yinput);
  gtk_box_pack_start (GTK_BOX (hbox2), yinput, FALSE, TRUE, 0);
  gtk_spin_button_set_numeric (GTK_SPIN_BUTTON (yinput), TRUE);

  add_point = gtk_button_new_with_mnemonic (_("Adicionar"));
  gtk_widget_show (add_point);
  gtk_box_pack_start (GTK_BOX (hbox2), add_point, FALSE, FALSE, 3);

  vseparator1 = gtk_vseparator_new ();
  gtk_widget_show (vseparator1);
  gtk_box_pack_start (GTK_BOX (hbox2), vseparator1, FALSE, TRUE, 5);

  togglebutton1 = gtk_toggle_button_new ();
  gtk_widget_show (togglebutton1);
  gtk_box_pack_start (GTK_BOX (hbox2), togglebutton1, FALSE, FALSE, 5);

  alignment1 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment1);
  gtk_container_add (GTK_CONTAINER (togglebutton1), alignment1);

  hbox3 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox3);
  gtk_container_add (GTK_CONTAINER (alignment1), hbox3);

  image1 = gtk_image_new_from_stock ("gtk-media-next", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image1);
  gtk_box_pack_start (GTK_BOX (hbox3), image1, FALSE, FALSE, 0);

  label4 = gtk_label_new_with_mnemonic (_("Reproduzir"));
  gtk_widget_show (label4);
  gtk_box_pack_start (GTK_BOX (hbox3), label4, FALSE, FALSE, 0);

  vseparator2 = gtk_vseparator_new ();
  gtk_widget_show (vseparator2);
  gtk_box_pack_start (GTK_BOX (hbox2), vseparator2, FALSE, FALSE, 5);

  next_step = gtk_button_new ();
  gtk_widget_show (next_step);
  gtk_box_pack_start (GTK_BOX (hbox2), next_step, FALSE, FALSE, 5);

  alignment2 = gtk_alignment_new (0.5, 0.5, 0, 0);
  gtk_widget_show (alignment2);
  gtk_container_add (GTK_CONTAINER (next_step), alignment2);

  hbox4 = gtk_hbox_new (FALSE, 2);
  gtk_widget_show (hbox4);
  gtk_container_add (GTK_CONTAINER (alignment2), hbox4);

  image2 = gtk_image_new_from_stock ("gtk-media-forward", GTK_ICON_SIZE_BUTTON);
  gtk_widget_show (image2);
  gtk_box_pack_start (GTK_BOX (hbox4), image2, FALSE, FALSE, 0);

  label5 = gtk_label_new_with_mnemonic (_("Pr\303\263ximo Passo"));
  gtk_widget_show (label5);
  gtk_box_pack_start (GTK_BOX (hbox4), label5, FALSE, FALSE, 0);

  statusbar = gtk_statusbar_new ();
  gtk_widget_show (statusbar);
  gtk_box_pack_start (GTK_BOX (vbox1), statusbar, FALSE, FALSE, 0);

  g_signal_connect ((gpointer) menu_new, "activate",
                    G_CALLBACK (on_menu_new_activate),
                    NULL);
  g_signal_connect ((gpointer) menu_open, "activate",
                    G_CALLBACK (on_menu_open_activate),
                    NULL);
  g_signal_connect ((gpointer) menu_save, "activate",
                    G_CALLBACK (on_menu_save_activate),
                    NULL);
  g_signal_connect ((gpointer) menu_save_as, "activate",
                    G_CALLBACK (on_menu_save_as_activate),
                    NULL);
  g_signal_connect ((gpointer) menu_close, "activate",
                    G_CALLBACK (on_menu_close_activate),
                    NULL);
  g_signal_connect ((gpointer) show_trapezoids, "activate",
                    G_CALLBACK (on_show_trapezoids_activate),
                    NULL);
  g_signal_connect ((gpointer) show_graph, "activate",
                    G_CALLBACK (on_show_graph_activate),
                    NULL);
  g_signal_connect ((gpointer) colors_graph, "activate",
                    G_CALLBACK (on_colors_graph_activate),
                    NULL);
  g_signal_connect ((gpointer) color_trapezoids, "activate",
                    G_CALLBACK (on_color_trapezoids_activate),
                    NULL);
  g_signal_connect ((gpointer) color_segments, "activate",
                    G_CALLBACK (on_color_segments_activate),
                    NULL);
  g_signal_connect ((gpointer) color_robot, "activate",
                    G_CALLBACK (on_color_robot_activate),
                    NULL);
  g_signal_connect ((gpointer) sobre, "activate",
                    G_CALLBACK (on_sobre_activate),
                    NULL);
  g_signal_connect ((gpointer) toolbar_new, "clicked",
                    G_CALLBACK (on_toolbar_new_clicked),
                    NULL);
  g_signal_connect ((gpointer) toolbar_open, "clicked",
                    G_CALLBACK (on_toolbar_open_clicked),
                    NULL);
  g_signal_connect ((gpointer) toolbar_save, "clicked",
                    G_CALLBACK (on_toolbar_save_clicked),
                    NULL);
  g_signal_connect ((gpointer) toolbar_record_poits, "toggled",
                    G_CALLBACK (on_toolbar_record_poits_toggled),
                    NULL);
  g_signal_connect ((gpointer) toolbar_move, "clicked",
                    G_CALLBACK (on_toolbar_move_clicked),
                    NULL);
  g_signal_connect ((gpointer) drawingarea, "expose_event",
                    G_CALLBACK (on_drawingarea_expose_event),
                    NULL);
  g_signal_connect ((gpointer) drawingarea, "button_press_event",
                    G_CALLBACK (on_drawingarea_button_press_event),
                    NULL);
  g_signal_connect ((gpointer) drawingarea, "motion_notify_event",
                    G_CALLBACK (on_drawingarea_motion_notify_event),
                    NULL);
  g_signal_connect ((gpointer) speedscale, "value_changed",
                    G_CALLBACK (on_speedscale_value_changed),
                    NULL);
  g_signal_connect ((gpointer) stepbystep, "toggled",
                    G_CALLBACK (on_stepbystep_toggled),
                    NULL);
  g_signal_connect ((gpointer) add_point, "clicked",
                    G_CALLBACK (on_add_point_clicked),
                    NULL);
  g_signal_connect ((gpointer) togglebutton1, "toggled",
                    G_CALLBACK (on_togglebutton1_toggled),
                    NULL);
  g_signal_connect ((gpointer) next_step, "clicked",
                    G_CALLBACK (on_next_step_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (mainwindow, mainwindow, "mainwindow");
  GLADE_HOOKUP_OBJECT (mainwindow, vbox1, "vbox1");
  GLADE_HOOKUP_OBJECT (mainwindow, menubar1, "menubar1");
  GLADE_HOOKUP_OBJECT (mainwindow, menuitem4, "menuitem4");
  GLADE_HOOKUP_OBJECT (mainwindow, menuitem4_menu, "menuitem4_menu");
  GLADE_HOOKUP_OBJECT (mainwindow, menu_new, "menu_new");
  GLADE_HOOKUP_OBJECT (mainwindow, menu_open, "menu_open");
  GLADE_HOOKUP_OBJECT (mainwindow, menu_save, "menu_save");
  GLADE_HOOKUP_OBJECT (mainwindow, menu_save_as, "menu_save_as");
  GLADE_HOOKUP_OBJECT (mainwindow, separatormenuitem1, "separatormenuitem1");
  GLADE_HOOKUP_OBJECT (mainwindow, menu_close, "menu_close");
  GLADE_HOOKUP_OBJECT (mainwindow, menuitem6, "menuitem6");
  GLADE_HOOKUP_OBJECT (mainwindow, menuitem6_menu, "menuitem6_menu");
  GLADE_HOOKUP_OBJECT (mainwindow, show_trapezoids, "show_trapezoids");
  GLADE_HOOKUP_OBJECT (mainwindow, show_graph, "show_graph");
  GLADE_HOOKUP_OBJECT (mainwindow, separador1, "separador1");
  GLADE_HOOKUP_OBJECT (mainwindow, colors, "colors");
  GLADE_HOOKUP_OBJECT (mainwindow, colors_menu, "colors_menu");
  GLADE_HOOKUP_OBJECT (mainwindow, colors_graph, "colors_graph");
  GLADE_HOOKUP_OBJECT (mainwindow, color_trapezoids, "color_trapezoids");
  GLADE_HOOKUP_OBJECT (mainwindow, color_segments, "color_segments");
  GLADE_HOOKUP_OBJECT (mainwindow, color_robot, "color_robot");
  GLADE_HOOKUP_OBJECT (mainwindow, menuitem7, "menuitem7");
  GLADE_HOOKUP_OBJECT (mainwindow, menuitem7_menu, "menuitem7_menu");
  GLADE_HOOKUP_OBJECT (mainwindow, sobre, "sobre");
  GLADE_HOOKUP_OBJECT (mainwindow, toolbar1, "toolbar1");
  GLADE_HOOKUP_OBJECT (mainwindow, toolbar_new, "toolbar_new");
  GLADE_HOOKUP_OBJECT (mainwindow, toolbar_open, "toolbar_open");
  GLADE_HOOKUP_OBJECT (mainwindow, toolbar_save, "toolbar_save");
  GLADE_HOOKUP_OBJECT (mainwindow, toolbar_record_poits, "toolbar_record_poits");
  GLADE_HOOKUP_OBJECT (mainwindow, toolbar_move, "toolbar_move");
  GLADE_HOOKUP_OBJECT (mainwindow, vbox2, "vbox2");
  GLADE_HOOKUP_OBJECT (mainwindow, drawingarea, "drawingarea");
  GLADE_HOOKUP_OBJECT (mainwindow, hseparator1, "hseparator1");
  GLADE_HOOKUP_OBJECT (mainwindow, hbox1, "hbox1");
  GLADE_HOOKUP_OBJECT (mainwindow, label1, "label1");
  GLADE_HOOKUP_OBJECT (mainwindow, speedscale, "speedscale");
  GLADE_HOOKUP_OBJECT (mainwindow, stepbystep, "stepbystep");
  GLADE_HOOKUP_OBJECT (mainwindow, hseparator2, "hseparator2");
  GLADE_HOOKUP_OBJECT (mainwindow, hbox2, "hbox2");
  GLADE_HOOKUP_OBJECT (mainwindow, label2, "label2");
  GLADE_HOOKUP_OBJECT (mainwindow, xinput, "xinput");
  GLADE_HOOKUP_OBJECT (mainwindow, label3, "label3");
  GLADE_HOOKUP_OBJECT (mainwindow, yinput, "yinput");
  GLADE_HOOKUP_OBJECT (mainwindow, add_point, "add_point");
  GLADE_HOOKUP_OBJECT (mainwindow, vseparator1, "vseparator1");
  GLADE_HOOKUP_OBJECT (mainwindow, togglebutton1, "togglebutton1");
  GLADE_HOOKUP_OBJECT (mainwindow, alignment1, "alignment1");
  GLADE_HOOKUP_OBJECT (mainwindow, hbox3, "hbox3");
  GLADE_HOOKUP_OBJECT (mainwindow, image1, "image1");
  GLADE_HOOKUP_OBJECT (mainwindow, label4, "label4");
  GLADE_HOOKUP_OBJECT (mainwindow, vseparator2, "vseparator2");
  GLADE_HOOKUP_OBJECT (mainwindow, next_step, "next_step");
  GLADE_HOOKUP_OBJECT (mainwindow, alignment2, "alignment2");
  GLADE_HOOKUP_OBJECT (mainwindow, hbox4, "hbox4");
  GLADE_HOOKUP_OBJECT (mainwindow, image2, "image2");
  GLADE_HOOKUP_OBJECT (mainwindow, label5, "label5");
  GLADE_HOOKUP_OBJECT (mainwindow, statusbar, "statusbar");
  GLADE_HOOKUP_OBJECT_NO_REF (mainwindow, tooltips, "tooltips");

  gtk_window_add_accel_group (GTK_WINDOW (mainwindow), accel_group);

  return mainwindow;
}

GtkWidget*
create_colordialog (void)
{
  GtkWidget *colordialog;
  GtkWidget *ok_button1;
  GtkWidget *cancel_button1;
  GtkWidget *help_button1;
  GtkWidget *color_selection1;

  colordialog = gtk_color_selection_dialog_new (_("Selecione a Cor"));
  gtk_container_set_border_width (GTK_CONTAINER (colordialog), 5);
  gtk_window_set_modal (GTK_WINDOW (colordialog), TRUE);
  gtk_window_set_resizable (GTK_WINDOW (colordialog), FALSE);
  gtk_window_set_type_hint (GTK_WINDOW (colordialog), GDK_WINDOW_TYPE_HINT_DIALOG);

  ok_button1 = GTK_COLOR_SELECTION_DIALOG (colordialog)->ok_button;
  gtk_widget_show (ok_button1);
  GTK_WIDGET_SET_FLAGS (ok_button1, GTK_CAN_DEFAULT);

  cancel_button1 = GTK_COLOR_SELECTION_DIALOG (colordialog)->cancel_button;
  gtk_widget_show (cancel_button1);
  GTK_WIDGET_SET_FLAGS (cancel_button1, GTK_CAN_DEFAULT);

  help_button1 = GTK_COLOR_SELECTION_DIALOG (colordialog)->help_button;
  gtk_widget_show (help_button1);
  GTK_WIDGET_SET_FLAGS (help_button1, GTK_CAN_DEFAULT);

  color_selection1 = GTK_COLOR_SELECTION_DIALOG (colordialog)->colorsel;
  gtk_widget_show (color_selection1);
  gtk_container_set_border_width (GTK_CONTAINER (color_selection1), 5);
  gtk_color_selection_set_has_opacity_control (GTK_COLOR_SELECTION (color_selection1), FALSE);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (colordialog, colordialog, "colordialog");
  GLADE_HOOKUP_OBJECT_NO_REF (colordialog, ok_button1, "ok_button1");
  GLADE_HOOKUP_OBJECT_NO_REF (colordialog, cancel_button1, "cancel_button1");
  GLADE_HOOKUP_OBJECT_NO_REF (colordialog, help_button1, "help_button1");
  GLADE_HOOKUP_OBJECT_NO_REF (colordialog, color_selection1, "color_selection1");

  return colordialog;
}

GtkWidget*
create_opendialog (void)
{
  GtkWidget *opendialog;
  GtkWidget *dialog_vbox1;
  GtkWidget *dialog_action_area1;
  GtkWidget *button1;
  GtkWidget *button2;

  opendialog = gtk_file_chooser_dialog_new ("", NULL, GTK_FILE_CHOOSER_ACTION_OPEN, NULL);
  gtk_container_set_border_width (GTK_CONTAINER (opendialog), 5);
  gtk_window_set_modal (GTK_WINDOW (opendialog), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (opendialog), GDK_WINDOW_TYPE_HINT_DIALOG);

  dialog_vbox1 = GTK_DIALOG (opendialog)->vbox;
  gtk_widget_show (dialog_vbox1);

  dialog_action_area1 = GTK_DIALOG (opendialog)->action_area;
  gtk_widget_show (dialog_action_area1);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (dialog_action_area1), GTK_BUTTONBOX_END);

  button1 = gtk_button_new_from_stock ("gtk-cancel");
  gtk_widget_show (button1);
  gtk_dialog_add_action_widget (GTK_DIALOG (opendialog), button1, GTK_RESPONSE_CANCEL);
  GTK_WIDGET_SET_FLAGS (button1, GTK_CAN_DEFAULT);

  button2 = gtk_button_new_from_stock ("gtk-open");
  gtk_widget_show (button2);
  gtk_dialog_add_action_widget (GTK_DIALOG (opendialog), button2, GTK_RESPONSE_OK);
  GTK_WIDGET_SET_FLAGS (button2, GTK_CAN_DEFAULT);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (opendialog, opendialog, "opendialog");
  GLADE_HOOKUP_OBJECT_NO_REF (opendialog, dialog_vbox1, "dialog_vbox1");
  GLADE_HOOKUP_OBJECT_NO_REF (opendialog, dialog_action_area1, "dialog_action_area1");
  GLADE_HOOKUP_OBJECT (opendialog, button1, "button1");
  GLADE_HOOKUP_OBJECT (opendialog, button2, "button2");

  gtk_widget_grab_default (button2);
  return opendialog;
}

GtkWidget*
create_savedialog (void)
{
  GtkWidget *savedialog;
  GtkWidget *dialog_vbox2;
  GtkWidget *dialog_action_area2;
  GtkWidget *button3;
  GtkWidget *button4;

  savedialog = gtk_file_chooser_dialog_new ("", NULL, GTK_FILE_CHOOSER_ACTION_SAVE, NULL);
  gtk_container_set_border_width (GTK_CONTAINER (savedialog), 5);
  gtk_window_set_modal (GTK_WINDOW (savedialog), TRUE);
  gtk_window_set_type_hint (GTK_WINDOW (savedialog), GDK_WINDOW_TYPE_HINT_DIALOG);

  dialog_vbox2 = GTK_DIALOG (savedialog)->vbox;
  gtk_widget_show (dialog_vbox2);

  dialog_action_area2 = GTK_DIALOG (savedialog)->action_area;
  gtk_widget_show (dialog_action_area2);
  gtk_button_box_set_layout (GTK_BUTTON_BOX (dialog_action_area2), GTK_BUTTONBOX_END);

  button3 = gtk_button_new_from_stock ("gtk-cancel");
  gtk_widget_show (button3);
  gtk_dialog_add_action_widget (GTK_DIALOG (savedialog), button3, GTK_RESPONSE_CANCEL);
  GTK_WIDGET_SET_FLAGS (button3, GTK_CAN_DEFAULT);

  button4 = gtk_button_new_from_stock ("gtk-open");
  gtk_widget_show (button4);
  gtk_dialog_add_action_widget (GTK_DIALOG (savedialog), button4, GTK_RESPONSE_OK);
  GTK_WIDGET_SET_FLAGS (button4, GTK_CAN_DEFAULT);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (savedialog, savedialog, "savedialog");
  GLADE_HOOKUP_OBJECT_NO_REF (savedialog, dialog_vbox2, "dialog_vbox2");
  GLADE_HOOKUP_OBJECT_NO_REF (savedialog, dialog_action_area2, "dialog_action_area2");
  GLADE_HOOKUP_OBJECT (savedialog, button3, "button3");
  GLADE_HOOKUP_OBJECT (savedialog, button4, "button4");

  gtk_widget_grab_default (button4);
  return savedialog;
}

GtkWidget*
create_aboutdialog (void)
{
  GtkWidget *aboutdialog;
  const gchar *authors[] = {
    "Rafael Crivellari Saliba Schouery",
    NULL
  };
  /* TRANSLATORS: Replace this string with your names, one name per line. */
  gchar *translators = _("translator-credits");
  GdkPixbuf *aboutdialog_logo_pixbuf;

  aboutdialog = gtk_about_dialog_new ();
  gtk_container_set_border_width (GTK_CONTAINER (aboutdialog), 5);
  gtk_about_dialog_set_version (GTK_ABOUT_DIALOG (aboutdialog), VERSION);
  gtk_about_dialog_set_name (GTK_ABOUT_DIALOG (aboutdialog), _("Robot Planning"));
  gtk_about_dialog_set_website (GTK_ABOUT_DIALOG (aboutdialog), "http://mafagrafos.com");
  gtk_about_dialog_set_website_label (GTK_ABOUT_DIALOG (aboutdialog), _("Mafagrafos"));
  gtk_about_dialog_set_authors (GTK_ABOUT_DIALOG (aboutdialog), authors);
  gtk_about_dialog_set_translator_credits (GTK_ABOUT_DIALOG (aboutdialog), translators);
  aboutdialog_logo_pixbuf = create_pixbuf ("r2d2.png");
  gtk_about_dialog_set_logo (GTK_ABOUT_DIALOG (aboutdialog), aboutdialog_logo_pixbuf);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (aboutdialog, aboutdialog, "aboutdialog");

  return aboutdialog;
}

